<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4019.2">
  <POU Name="Abtauung" Id="{0fb38945-52b5-4ce6-a5e7-029b1206c271}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Abtauung
VAR
	AbtauFehler : BOOL;
	Timer :TOF;
	Timer_HeizungAbtauwanne: TON;
	
	StartAbtauwanneHeizung : TIME := T#5M; 
	state: INT:= 0;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*Ablaufstruktur bei einer elektrischen Abtauung des Verdampfers*)
	
	TimerAbtaudauer(IN:=TRUE, PT:= T#1H);
	
	IF bAbtauenAbbrechen = TRUE THEN 
		Mitteilung 				:= 'Abtauvorgang wurde abgebrochen!';
		bLeerlauf				:=TRUE;
		bKuehlen 				:=FALSE;
		bAbtauen				:=FALSE;
		bAbtauen_elektrisch		:=FALSE;
			ElektrischeHeizung_ON := FALSE;
		bAbtauen_Heissgas_oben	:=FALSE;
		bAbtauen_Heissgas_unten	:=FALSE;
		bPumpDownAbgeschlossen := FALSE;
		TimerAbtaudauer			(IN:= FALSE);
		state					:= 0;
	(*nächster Status*)
		SM.Status := Leerlauf;
	
		ELSE 
		bLeerlauf :=FALSE; 
	END_IF

CASE state OF
	
		
0: 
	bAbtauenAbgeschlossen := FALSE;
	
	(*Regler werden ausgeschaltet*)
	
		PID_KP.Aktiv:= 					FALSE;
		PID_VF_Ventilator.Aktiv :=		FALSE;
		VD_Ventilator_ON:= 				FALSE;
		VD_defrost_Ventilator_ON := 	FALSE;
		KP_ON:= 						FALSE;
	(*Nächster State wird je nach Abtau-Modus ausgewählt*)	
		IF bAbtauen_elektrisch THEN
		state:= 1;
		END_IF	
		
		IF bAbtauen_Heissgas_oben THEN
		state:= 5;
		END_IF	
		
		IF bAbtauen_Heissgas_unten THEN
		state:= 5;
		END_IF	
		
		IF NOT bAbtauen_elektrisch AND NOT bAbtauen_Heissgas_oben AND NOT bAbtauen_Heissgas_unten THEN
		AbtauFehler := TRUE;
		state:= 0;
		ELSE 
		AbtauFehler := FALSE;
		END_IF
			
1:	
	(*Elektrische Heizung wird eingeschaltet*)
		ElektrischeHeizung_ON := TRUE;								// Schütz wird geschaletet und Heizung kann nun geregelt werden
		Timer_HeizungAbtauwanne(In:= TRUE, PT:= StartAbtauwanneHeizung);
		
		(*Ausgewählte Heizleistung für Bodenheizung und Heizracks*)
		//Regler aktivieren
			Soll_ElektHeizrack1.REAL_VAR := 	 Heizstufe;
			Soll_ElektHeizrack2.REAL_VAR := 	 Heizstufe;
		IF Timer_HeizungAbtauwanne.Q THEN
			Soll_ElektHeizrack_Boden.REAL_VAR := Heizstufe;
		END_IF

		(*Berechnet die tatsächliche Leistung*)
			P_el_Boden:= Heizstufe/10	*P_el_Boden_max;
			P_el_Rack1:= Heizstufe/10	*P_el_Rack_max;
			P_el_Rack2:= Heizstufe/10	*P_el_Rack_max;	

		(*Gesamte Heizleistung wird berechnet*)
			P_el_Heizung_ges:= P_el_Boden + P_el_Rack1 + P_el_Rack2;

	
	(*Überprüfung ob Oberflächentemperatur auf dem Verdampfer größer als 10°C ist*)
	(*Elektrische Heizung wird ausgeschaltet*)

		IF 	Temp_VD_Surface_gemittelt > 10 THEN
			ElektrischeHeizung_ON := FALSE;
			Timer_HeizungAbtauwanne(In:= FALSE);  		//Reset Timer
			Soll_ElektHeizrack1.REAL_VAR := 	0;		// Ausschalten der Heizung
			Soll_ElektHeizrack2.REAL_VAR := 	0;		// Ausschalten der Heizung
			Soll_ElektHeizrack_Boden.REAL_VAR :=0;		// Ausschalten der Heizung
			
			state:= 8;	
		END_IF


5:
	(*state wird je nach Methode gewählt*)	
		IF bAbtauen_Heissgas_oben THEN 
			state:= 6;
		END_IF
		
		IF bAbtauen_Heissgas_unten THEN 
			state:=7; 
		END_IF
		
6: 	
	(*Schalte auf Abtauen von Oben*)
		fb_Schuetzstellung(myStatus:= AbtauenOben);
		
		state:= 8;
	
7:	
	(*Schalte auf Abtauen von Unten*)
		fb_Schuetzstellung(myStatus:= AbtauenUnten);
						
		state:=8;

8: 	
	(*Kompressor und Ventilator vom VD_defrost werden eingeschaltet*)		
		KP_ON:= 					TRUE;
		PID_KP.Aktiv :=				TRUE;
		VD_defrost_Ventilator_ON := TRUE;
		
		IF Temp_VD_Surface_gemittelt > 10 THEN			
			KP_ON:= 					FALSE;
			PID_KP.Aktiv := 			FALSE;
			VD_defrost_Ventilator_ON := FALSE;
			state:= 9;
			Timer(IN:=FALSE);
		END_IF
9: 
	(*Starte Timer. Timer läuft 10 Minuten*)
		Timer(IN:= TRUE, PT:= T#10M);
	
		IF Timer.Q THEN
			state:= 10;
			Timer(IN:= FALSE);
		END_IF
	
10: 	
	(*Schalte Schütze auf Kühlen*)
		fb_Schuetzstellung(myStatus:= KuehlenOben);
	
	(*Kompressor wird eingeschaltet*)
		KP_ON		:= TRUE;
		PID_KP.Aktiv:= TRUE;
		
	(*Überprüfung ob Oberflächentemperatur auf dem Verdampfer kleiner als 0°C ist*)	
		IF Temp_VD_Surface_gemittelt< 0 THEN
			VD_Ventilator_ON:= TRUE;
			state:=11;
		END_IF
		
11: 	
	(*Anlage wird reverse abgepumpt, falls sie zuvor per Heißgas(oben oder unten) abgetaut wurde*)	
		IF bAbtauen_Heissgas_oben = TRUE OR bAbtauen_Heissgas_unten = TRUE THEN 
		 bPumpDown_rev := TRUE;
		END_IF

	(*Abtau-Vorgang ist abgeschlossen. State-Maschine: Abtauen->FALSE. Kuehlen-> TRUE. *)	
		Mitteilung:= 				'Abtau-Vorgang wurde erfolgreich abgeschlossen';
		bAbtauenAbgeschlossen := 	TRUE;
		bAbtauen			:= 		FALSE;
		bAbtauen_elektrisch:= 		FALSE;
		bAbtauen_Heissgas_oben:= 	FALSE;
		bAbtauen_Heissgas_unten:= 	FALSE;
		bPumpDownAbgeschlossen := 	FALSE;
	(*Kühl-Modus wird aktiviert und gegebenfalls ein PUMPDOWN_rev durchgeführt*)
		IF AutomatikZyklusEin THEN 
				bKuehlen:= TRUE;
				CASE  AutomatikAbtauModus OF 
						NichtAusgewahlt: 
							Mitteilung := 'Kein Automatik-Abtaumodus ausgewählt!';
						Abtauen_elektrisch:
							bPumpDown_rev := FALSE;
						Abtauen_Heissgas_oben:
							bPumpDown_rev:= TRUE;
						Abtauen_Heissgas_unten:
							bPumpDown_rev := TRUE;
				END_CASE
		END_IF
		
	(*Gestoppte Zeit für den Abtauzyklus wird auf Null gesetzt*)
		TimerAbtaudauer(IN:= FALSE);
	
	(*Reset von State auf Null*)
		state:= 0;
	
		
END_CASE


]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>