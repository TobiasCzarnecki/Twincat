<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4019.2">
  <POU Name="DB_Lesen_Komponenten" Id="{9dc4daa7-de5f-45e7-bc91-f17a1a2e4566}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM DB_Lesen_Komponenten
VAR
  FB_DB_Schliesse_Komponenten:FB_DBConnectionClose;

   
  a: ARRAY[0..200] OF st_db_komponenten; 

  myInputVar :INPUT_VAR; 
  
 // myInputVarUINT :INPUT_VAR_UINT;
  
  myOutputVar :OUTPUT_VAR; 
  
	FB_DB_Lese_Komponenten: FB_DBRecordArraySelect;
	sSelectString: STRING(800):= 'SELECT `id`, `timestamp`, `typ`, `symbolname`, `faktor_lin_m`, `faktor_lin_c`, `sonstiges`, `einheit`, `maxwert`, `minwert` ,`faktor_PT1_K`,`faktor_PT1_T` FROM `komponenten`';
	nRecIndex: UDINT;
	bStartStopSelect: BOOL;
	bBusySelect: BOOL;
	bErrorSelect: BOOL;
	stSQLStateSelect: TC2_DATABASE.ST_DBSQLError;
	nRecordCount: UDINT;
	Busy_Lesen_Komponenten:BOOL;
	start_Lesen_Komponenten:BOOL:=false;
	start_Schliessen_Komponenten:BOOL:=True;
	Counter: UDINT:=0;
	
	
	timer1: ton;
	timer1_start:BOOL:=TRUE;
	Lesen_nErrID: UDINT;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
SM.Leerlauf:=FALSE;

timer1(IN:=timer1_start,pt:=T#3S);
//timer1_start:=FALSE;
IF timer1.Q THEN
	start_Lesen_Komponenten:=TRUE;
	timer1_start:=FALSE;
END_IF



//=========================================================================================	
//Komponenten auslesen		
	FB_DB_Lese_Komponenten(
				sNetID:= , 
				hDBID:= 3, 
				pCmdAddr:= ADR(sSelectString), 
				cbCmdSize:= SIZEOF(sSelectString), 
				nStartIndex:= nRecIndex, 
				nRecordCount:=nRecordCount-1, 
				pDestAddr:= ADR(a), 
				cbRecordArraySize:= SIZEOF(a), 
				bExecute:= start_Lesen_Komponenten, 
				tTimeout:= T#5S, 
				bBusy=> Busy_Lesen_Komponenten, 
				bError=> SM.Fehler, 
				nErrID=> Lesen_nErrID , 
				sSQLState=> stSQLStateSelect, 
				nRecords=> nRecordCount); 
				
	start_Lesen_Komponenten:=FALSE;
				
	

	
	IF nRecordCount>0 THEN
		
		FOR counter:=0 TO nRecordCount-1 BY 1 DO
	   
		myinputvar.REAL_PARA_C:=STRING_TO_REAL(a[Counter].faktor_lin_c);
		myinputvar.REAL_PARA_M:=STRING_TO_REAL(a[Counter].faktor_lin_m);
		myinputvar.REAL_PARA_maxWert:=STRING_TO_REAL(a[Counter].maxwert);
		myinputvar.REAL_PARA_minWert:=STRING_TO_REAL(a[Counter].minwert);
		myinputvar.REAL_PARA_PT1_K:=STRING_TO_REAL(a[Counter].faktor_PT1_K);
		myinputvar.REAL_PARA_PT1_T:=STRING_TO_TIME(a[Counter].faktor_PT1_T);
		
		myInputVarUINT.REAL_PARA_C:=STRING_TO_REAL(a[Counter].faktor_lin_c);
		myInputVarUINT.REAL_PARA_M:=STRING_TO_REAL(a[Counter].faktor_lin_m);
		myInputVarUINT.REAL_PARA_maxWert:=STRING_TO_REAL(a[Counter].maxwert);
		myInputVarUINT.REAL_PARA_minWert:=STRING_TO_REAL(a[Counter].minwert);
		myInputVarUINT.REAL_PARA_PT1_K:=STRING_TO_REAL(a[Counter].faktor_PT1_K);
		myInputVarUINT.REAL_PARA_PT1_T:=STRING_TO_TIME(a[Counter].faktor_PT1_T);
		
		myOutputVar.REAL_PARA_C:=STRING_TO_REAL(a[Counter].faktor_lin_c);
		myOutputVar.REAL_PARA_M:=STRING_TO_REAL(a[Counter].faktor_lin_m);
		myOutputVar.REAL_PARA_maxWert:=STRING_TO_REAL(a[Counter].maxwert);
		myOutputVar.REAL_PARA_minWert:=STRING_TO_REAL(a[Counter].minwert);
		
		
	//=========================================================================================	
	//Temperaturen		
			IF a[counter].symbolname = 'KK.Temp_KK_Raummitte_OL' THEN
				KK.Temp_KK_Raummitte_OL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'KK.Temp_KK_Raummitte_OR' THEN
				KK.Temp_KK_Raummitte_OR:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'KK.Temp_KK_Raummitte_UL' THEN
				KK.Temp_KK_Raummitte_UL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'KK.Temp_KK_Raummitte_UR' THEN
				KK.Temp_KK_Raummitte_UR:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'KK.Temp_KK_Auslass_OL' THEN
				KK.Temp_KK_Auslass_OL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'KK.Temp_KK_Auslass_OR' THEN
				KK.Temp_KK_Auslass_OR:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'KK.Temp_KK_Auslass_UL' THEN
				KK.Temp_KK_Auslass_UL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'KK.Temp_KK_Auslass_UR' THEN
				KK.Temp_KK_Auslass_UR:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'KK.Temp_KK_Kanal_nach_Heizer' THEN
				KK.Temp_KK_Kanal_nach_Heizer:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'KK.Temp_KK_Kanal_nach_WU' THEN
				KK.Temp_KK_Kanal_nach_WU:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'KK.Temp_KK_Kanal_vor_Ventilator' THEN
				KK.Temp_KK_Kanal_vor_Ventilator:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'KK.Temp_KK_Kalte_VL' THEN
				KK.Temp_KK_Kalte_VL:=myinputVar;
			END_IF				
			IF a[counter].symbolname = 'KK.Temp_KK_Kalte_RL' THEN
				KK.Temp_KK_Kalte_RL:=myinputVar;
			END_IF	
			IF a[counter].symbolname = 'KK.Temp_KK_Abtau_VL' THEN
				KK.Temp_KK_Abtau_VL:=myinputVar;
			END_IF	
			IF a[counter].symbolname = 'KK.Temp_KK_Abtau_RL' THEN
				KK.Temp_KK_Abtau_RL:=myinputVar;
			END_IF		
			IF a[counter].symbolname = 'KK.Temp_VS_Kalte_RL' THEN
				KK.Temp_VS_Kalte_RL:=myinputVar;
			END_IF	
			IF a[counter].symbolname = 'KK.Temp_VS_Kalte_VL' THEN
				KK.Temp_VS_Kalte_VL:=myinputVar;
			END_IF

			IF a[counter].symbolname = 'HYD.U15.Temp_VL' THEN
				HYD.U15.Temp_VL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U15.Temp_extVL' THEN
				HYD.U15.Temp_extVL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U15.Temp_extRL' THEN
				HYD.U15.Temp_extRL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U15.Temp_extEin' THEN
				HYD.U15.Temp_extEin:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U15.Temp_extAus' THEN
				HYD.U15.Temp_extAus:=myinputVar;
			END_IF		
				IF a[counter].symbolname = 'HYD.O15.Temp_VL' THEN
				HYD.O15.Temp_VL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O15.Temp_extVL' THEN
				HYD.O15.Temp_extVL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O15.Temp_extRL' THEN
				HYD.O15.Temp_extRL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O15.Temp_extEin' THEN
				HYD.O15.Temp_extEin:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O15.Temp_extAus' THEN
				HYD.O15.Temp_extAus:=myinputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.U22L.Temp_VL' THEN
				HYD.U22L.Temp_VL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U22L.Temp_extVL' THEN
				HYD.U22L.Temp_extVL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U22L.Temp_extRL' THEN
				HYD.U22L.Temp_extRL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U22L.Temp_extEin' THEN
				HYD.U22L.Temp_extEin:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U22L.Temp_extAus' THEN
				HYD.U22L.Temp_extAus:=myinputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O22L.Temp_VL' THEN
				HYD.O22L.Temp_VL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O22L.Temp_extVL' THEN
				HYD.O22L.Temp_extVL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O22L.Temp_extRL' THEN
				HYD.O22L.Temp_extRL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O22L.Temp_extEin' THEN
				HYD.O22L.Temp_extEin:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O22L.Temp_extAus' THEN
				HYD.O22L.Temp_extAus:=myinputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.U22R.Temp_VL' THEN
				HYD.U22R.Temp_VL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U22R.Temp_extVL' THEN
				HYD.U22R.Temp_extVL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U22R.Temp_extRL' THEN
				HYD.U22R.Temp_extRL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U22R.Temp_extEin' THEN
				HYD.U22R.Temp_extEin:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U22R.Temp_extAus' THEN
				HYD.U22R.Temp_extAus:=myinputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O22R.Temp_VL' THEN
				HYD.O22R.Temp_VL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O22R.Temp_extVL' THEN
				HYD.O22R.Temp_extVL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O22R.Temp_extRL' THEN
				HYD.O22R.Temp_extRL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O22R.Temp_extEin' THEN
				HYD.O22R.Temp_extEin:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O22R.Temp_extAus' THEN
				HYD.O22R.Temp_extAus:=myinputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.U28.Temp_VL' THEN
				HYD.U28.Temp_VL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U28.Temp_extVL' THEN
				HYD.U28.Temp_extVL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U28.Temp_extRL' THEN
				HYD.U28.Temp_extRL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U28.Temp_extEin' THEN
				HYD.U28.Temp_extEin:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U28.Temp_extAus' THEN
				HYD.U28.Temp_extAus:=myinputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O28.Temp_VL' THEN
				HYD.O28.Temp_VL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O28.Temp_extVL' THEN
				HYD.O28.Temp_extVL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O28.Temp_extRL' THEN
				HYD.O28.Temp_extRL:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O28.Temp_extEin' THEN
				HYD.O28.Temp_extEin:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.O28.Temp_extAus' THEN
				HYD.O28.Temp_extAus:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'KK.Temp_VS_Kaltwasser_VL' THEN
				KK.Temp_VS_Kaltwasser_VL:=myinputVar;
			END_IF				
	//=========================================================================================	
	//Volumenströme		
			IF a[counter].symbolname = 'KK.Vdot_KK_Auslass_OL' THEN
				KK.Vdot_KK_Auslass_OL:=myinputVar;
			END_IF			
			IF a[counter].symbolname = 'KK.Vdot_KK_Auslass_OR' THEN
				KK.Vdot_KK_Auslass_OR:=myinputVar;
			END_IF			
			IF a[counter].symbolname = 'KK.Vdot_KK_Auslass_UL' THEN
				KK.Vdot_KK_Auslass_UL:=myinputVar;
			END_IF			
			IF a[counter].symbolname = 'KK.Vdot_KK_Auslass_UR' THEN
				KK.Vdot_KK_Auslass_UR:=myinputVar;
			END_IF			
			IF a[counter].symbolname = 'KK.Vdot_KK_Kalte' THEN
				KK.Vdot_KK_Kalte:=myinputVar;
			END_IF			
			IF a[counter].symbolname = 'KK.Vdot_KK_Abtau' THEN
				KK.Vdot_KK_Abtau:=myinputVar;
			END_IF			
			IF a[counter].symbolname = 'KK.Vdot_VS_Warmwasser' THEN
				KK.Vdot_VS_Warmwasser:=myinputVar;
			END_IF			
			IF a[counter].symbolname = 'KK.Vdot_VS_Kaltwasser' THEN
				KK.Vdot_VS_Kaltwasser:=myinputVar;
			END_IF
			
			IF a[counter].symbolname = 'HYD.O15.Vdot' THEN
				HYD.O15.Vdot :=myInputVarUINT;
			END_IF
			IF a[counter].symbolname = 'HYD.U15.Vdot' THEN
				HYD.U15.Vdot :=myInputVarUINT;
			END_IF
			IF a[counter].symbolname = 'HYD.O22L.Vdot' THEN
				HYD.O22L.Vdot :=myInputVarUINT;
			END_IF
			IF a[counter].symbolname = 'HYD.U22L.Vdot' THEN
				HYD.U22L.Vdot :=myInputVarUINT;
			END_IF
			IF a[counter].symbolname = 'HYD.O22R.Vdot' THEN
				HYD.O22R.Vdot :=myInputVarUINT;
			END_IF
			IF a[counter].symbolname = 'HYD.U22R.Vdot' THEN
				HYD.U22R.Vdot :=myInputVarUINT;
			END_IF
			IF a[counter].symbolname = 'HYD.O28.Vdot' THEN
				HYD.O28.Vdot :=myInputVarUINT;
			END_IF
			IF a[counter].symbolname = 'HYD.U28.Vdot' THEN
				HYD.U28.Vdot :=myInputVarUINT;
			END_IF
	
			IF a[counter].symbolname = 'HYD.Vdot_Warmwasser_VS' THEN
				HYD.Vdot_Warmwasser_VS :=myinputVar;
			END_IF
	//=========================================================================================	
	//Rel. Feuchte Sensor
			IF a[counter].symbolname = 'KK.rlFeuchte_KK_Raummitte' THEN
				KK.rlFeuchte_KK_Raummitte:=myinputVar;
			END_IF
			IF a[counter].symbolname = 'KK.rlFeuchte_KK_Stativ' THEN
				KK.rlFeuchte_KK_Stativ:=myinputVar;
			END_IF		
		
	//=========================================================================================	
	//Stellsignal Ventilator
			IF a[counter].symbolname = 'KK.Soll_KK_Ventilator' THEN
				KK.Soll_KK_Ventilator:=myOutputVar;
			END_IF	
	//=========================================================================================	
	//Stellsignal 3WV 
			IF a[counter].symbolname = 'KK.Soll_KK_Kalte_3WV' THEN
				KK.Soll_KK_Kalte_3WV:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'KK.Soll_VS_Warmwasser_3WV_Drossel' THEN
				KK.Soll_VS_Warmwasser_3WV_Drossel:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'KK.Soll_VS_Warmwasser_3WV' THEN
				KK.Soll_VS_Warmwasser_3WV:=myOutputVar;
			END_IF	
			
	
			IF a[counter].symbolname = 'HYD.U15.DWV_VL' THEN
				HYD.U15.DWV_VL:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O15.DWV_VL' THEN
				HYD.O15.DWV_VL:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.U22L.DWV_VL' THEN
				HYD.U22L.DWV_VL:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O22L.DWV_VL' THEN
				HYD.O22L.DWV_VL:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.U22R.DWV_VL' THEN
				HYD.U22R.DWV_VL:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O22R.DWV_VL' THEN
				HYD.O22R.DWV_VL:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.U28.DWV_VL' THEN
				HYD.U28.DWV_VL:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O28.DWV_VL' THEN
				HYD.O28.DWV_VL:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.U15.DWV_Drossel' THEN
				HYD.U15.DWV_Drossel:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O15.DWV_Drossel' THEN
				HYD.O15.DWV_Drossel:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.U22L.DWV_Drossel' THEN
				HYD.U22L.DWV_Drossel:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O22L.DWV_Drossel' THEN
				HYD.O22L.DWV_Drossel:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.U22R.DWV_Drossel' THEN
				HYD.U22R.DWV_Drossel:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O22R.DWV_Drossel' THEN
				HYD.O22R.DWV_Drossel:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.U28.DWV_Drossel' THEN
				HYD.U28.DWV_Drossel:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O28.DWV_Drossel' THEN
				HYD.O28.DWV_Drossel:=myOutputVar;
			END_IF
	//=========================================================================================	
	//Stellsignal Heizer
			IF a[counter].symbolname = 'KK.Soll_KK_Heizer_1' THEN
				KK.Soll_KK_Heizer_1:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'KK.Soll_KK_Heizer_2' THEN
				KK.Soll_KK_Heizer_2:=myOutputVar;
			END_IF	
		
	//=========================================================================================	
	//Stellsignal Pumpen
			IF a[counter].symbolname = 'KK.Soll_KK_Kalte_Pumpe' THEN
				KK.Soll_KK_Kalte_Pumpe:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'KK.Soll_KK_Abtau_Pumpe' THEN
				KK.Soll_KK_Abtau_Pumpe:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'KK.Soll_VS_Warmwasser_Pumpe' THEN
				KK.Soll_VS_Warmwasser_Pumpe:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'KK.Soll_VS_Kaltwasser_Pumpe' THEN
				KK.Soll_VS_Kaltwasser_Pumpe:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.U15.Pumpe' THEN
				HYD.U15.Pumpe:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O15.Pumpe' THEN
				HYD.O15.Pumpe:=myOutputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U22L.Pumpe' THEN
				HYD.U22L.Pumpe:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O22L.Pumpe' THEN
				HYD.O22L.Pumpe:=myOutputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U22R.Pumpe' THEN
				HYD.U22R.Pumpe:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O22R.Pumpe' THEN
				HYD.O22R.Pumpe:=myOutputVar;
			END_IF
			IF a[counter].symbolname = 'HYD.U28.Pumpe' THEN
				HYD.U28.Pumpe:=myOutputVar;
			END_IF	
			IF a[counter].symbolname = 'HYD.O28.Pumpe' THEN
				HYD.O28.Pumpe:=myOutputVar;
			END_IF

	
	//=========================================================================================	
	//Befeuchter
			IF a[counter].symbolname = 'KK.Soll_KK_Befeuchter' THEN
				KK.Soll_KK_Befeuchter:=myOutputVar;
			END_IF				
			

	
		
		END_FOR
	
			
	

	ELSE
		 SM.Fehler:=TRUE;
	END_IF
	
	IF Busy_Lesen_Komponenten=FALSE THEN
		SM.Leerlauf:=TRUE;
		ELSE  sm.Leerlauf:=FALSE;
	END_IF
	

	
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>