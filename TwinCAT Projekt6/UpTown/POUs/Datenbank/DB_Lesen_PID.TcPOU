<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4019.2">
  <POU Name="DB_Lesen_PID" Id="{1976f1af-4c89-43c8-b0e8-ac69a71d8c23}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM DB_Lesen_PID
VAR
	  
   FB_DB_Schliesse_PID:FB_DBConnectionClose;
 	a: ARRAY[0..100] OF ST_DB_PID;

	myPID: PID;

  
	FB_DB_Lese_PID: FB_DBRecordArraySelect;
	sSelectString: STRING(800):= 'SELECT `id`, `timestamp`, `symbolname`, `aktiv`, `Kp`, `I`, `D`, `limitunten`,`limitoben`,`Einschalttoleranz`,`Offset` FROM `pid`';
	nRecIndex: UDINT;
	bStartStopSelect: BOOL;
	bBusySelect: BOOL;
	bErrorSelect: BOOL;
	stSQLStateSelect: TC2_DATABASE.ST_DBSQLError;
	nRecordCount: UDINT;
	Busy_Lesen_PID:BOOL;
	start_Lesen_PID:BOOL:=TRUE;
	start_Schliessen_PID:BOOL:=FALSE;
	Counter: UDINT:=0;
	
	pCmdAddr: UDINT;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF 	SM.bLeerlauf THEN
	
start_Lesen_PID:=TRUE;
SM.bLeerlauf:=FALSE;
	
END_IF

//=========================================================================================	
//PID auslesen		
	FB_DB_Lese_PID(
				sNetID:=, 
				hDBID:= 4, 
				pCmdAddr:= ADR(sSelectString), 
				cbCmdSize:= SIZEOF(sSelectString), 
				nStartIndex:= nRecIndex, 
				nRecordCount:=nRecordCount-1, 
				pDestAddr:= ADR(a), 
				cbRecordArraySize:= SIZEOF(a), 
				bExecute:= start_Lesen_PID, 
				tTimeout:= T#5S, 
				bBusy=> Busy_Lesen_PID, 
				bError=> SM.bFehler, 
				nErrID=> , 
				sSQLState=> stSQLStateSelect, 
				nRecords=> nRecordCount); 
				

				
	IF Busy_Lesen_PID=FALSE THEN
			start_Lesen_pid:=FALSE;
		start_Schliessen_PID:=TRUE;
	END_IF
	
	IF nRecordCount>0 THEN
		
		FOR counter:=0 TO nRecordCount-1 BY 1 DO
		
	//mypid.w:=STRING_TO_REAL(a[Counter].w);
	//mypid.x:=STRING_TO_REAL(a[Counter].x);
	mypid.Kp:=STRING_TO_REAL(a[Counter].Kp);
	mypid.I:=STRING_TO_REAL(a[Counter].I);
	mypid.D:=STRING_TO_REAL(a[Counter].D);
	//mypid.Einschalttoleranz:= STRING_TO_REAL(a[Counter].Einschalttoleranz);
	//myPID.Offset:= STRING_TO_REAL(a[Counter].Offset);
	
//	mypid.Ta:=STRING_TO_REAL(a[Counter].Ta);
//	mypid.Aktiv:=a[Counter].aktiv;
		
		
	//=========================================================================================	
	//	
			IF a[counter].symbolname = 'REGLER.PID_KP' THEN
				REGLER.PID_KP:=mypid;
			END_IF
			IF a[counter].symbolname = 'REGLER.PID_VF_Ventilator' THEN
				REGLER.PID_VF_Ventilator:=mypid;
			END_IF
			IF a[counter].symbolname = 'REGLER.PID_VD_defrost_Ventilator' THEN
				REGLER.PID_VD_defrost_Ventilator:=mypid;
			END_IF

		END_FOR
	END_IF
	
	IF Busy_Lesen_pid=FALSE THEN
		SM.bLeerlauf:=TRUE;
		ELSE  sm.bLeerlauf:=FALSE;
	END_IF
	]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>