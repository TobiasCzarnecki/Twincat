<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4018.5">
  <POU Name="MODBUS_EL" Id="{98159f27-7da7-4f3a-9d45-35bf24bd6264}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MODBUS_EL
VAR
	 ModbusEL6021: ModbusRtuMaster_PcCOM;
	 modbusData_MSS: ARRAY[0..100] OF BYTE;		//hier werden die Daten von dem Massenstromsensor MSS1 gespeichert
	ModbusAdresse : INT := 1;
	state: INT;
	
	(*Variablen für Error- und Successzähler der Modbus-Komunikation *)
	FtrigBusy:			F_TRIG;
	LastErrorstate: 	INT;
	LastModbusError: 	ST_ModbusErrorDiagnostics;
	CounterError: 		DINT;
	CounterSuccess: 	DINT;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[ModbusEL6021.ReadRegs(Execute:= FALSE);

		ModbusEL6021.ReadInputRegs(
		UnitID:= 1,
 		Quantity:= 10,								//zehn Register werden ausgelesen
 		MBAddr:= 30000,								
 		cbLength:= SIZEOF(modbusData_MSS[0]),		
 		pMemoryAddr:= ADR(modbusData_MSS[0]),		//Daten werden in für MSS DATA-ARRAY geschrieben
  		Execute:= TRUE,
  		Timeout:= modbusTimeout,
  		Busy => isModbusBusy,
  		Error => isModbusError,
  		ErrorId => modbusErrorId
  		(*cbRead parameter)*));
	
		
		IF NOT isModbusBusy THEN
				MODBUS.myModbus.ReadRegs(Execute:= FALSE);
			IF MODBUS.myModbus.Error THEN
				state := 0;
			ELSE
				state :=state + 1 ;	
			END_IF
		END_IF
		
		
		
FtrigBusy(CLK:=myModbus.BUSY );
IF FtrigBusy.Q THEN
	IF MODBUS.myModbus.Error THEN
		LastModbusError := ModbusEL6021.ErrorDiagnostics;
		LastErrorstate := state;
		CounterError := CounterError + 1;
	ELSE
		CounterSuccess := CounterSuccess + 1;
	END_IF
END_IF

]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>