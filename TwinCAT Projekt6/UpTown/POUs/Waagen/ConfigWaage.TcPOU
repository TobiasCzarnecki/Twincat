<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4019.2">
  <POU Name="ConfigWaage" Id="{d4d09f66-48a2-4467-990b-a6bdbad30313}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM ConfigWaage 

VAR
//========================================================================================
	timer_Einschwingen: TON;		//Einschwingzeit wird definiert
	timer_Messen	: TON;		//Messzeit wird definiert
	
	bEinschwingvorgang_vorbei: 	BOOL;
	
	WertMitteln: 	FT_AVG;
	Trigger :		SH_1;
	FilterIn : 		REAL;
	k_werte: 		ARRAY[1..5] OF REAL; // Für jeden Kalibrierungschritt einen Umrechnungswert
	
	WaagenNummer: 	INT := 1;		//WaagenNummer
	state: 			INT := 0; 		// Laufvariable für Casestruktur
	Kalibrierungsschritt: INT ;
	GesKaliGewicht : REAL; 			//Gesamtes Kalibrierungsgewicht. Ist eine Kombination aus den Kalibrierungsgewichten
	Kalibrierungsgewichte : ARRAY [1..3] OF REAL := [494.1, 1013.3, 1013.1];
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[

CASE state OF

0: (*Einschwingvorgang wird abgewartet*)
	BereitNachstePosition:= FALSE;
	IF ManuellOK THEN 
	timer_Einschwingen(IN:= TRUE, PT:= T#120S ); // der Timer wird gestartet, damit sich das Wägesystem einschwingen kann
	IF timer_Einschwingen.Q  THEN 
		timer_Einschwingen(IN :=FALSE); 
		ManuellOK := FALSE;
		state:=1;
	END_IF
	END_IF
	
1: (*Kalibrierungsdaten werden aufgenommen und über einen FIlter gemittelt*)
	
	timer_Messen(IN:= TRUE, PT:= T#120S); //120 Sekunden wird gemessen
	
	CASE  Kalibrierungsschritt OF
		1: 
			GesKaliGewicht := Kalibrierungsgewichte[1];
			//SM.Mitteilung  :='Bitte hängen';
		2:
			GesKaliGewicht := Kalibrierungsgewichte[2];
		3:
			GesKaliGewicht := Kalibrierungsgewichte[1] + Kalibrierungsgewichte [2];
		4:
			GesKaliGewicht := Kalibrierungsgewichte[2] + Kalibrierungsgewichte [3];
		5:
			GesKaliGewicht := Kalibrierungsgewichte[1] + Kalibrierungsgewichte [2]+ Kalibrierungsgewichte [3];
	END_CASE

	FilterIn :=Waage_Offset[WaagenNummer]/ GesKaliGewicht;
	Trigger(in:= FilterIn, PT:= T#1S, out=> , Trig=> );

	WertMitteln(IN:= Trigger.out, E:= Trigger.Trig, N:= 30, RST:= BereitNachstePosition, AVG=>k_werte[Kalibrierungsschritt] );	
	
	IF timer_Messen.Q THEN 
		state :=2;
		timer_Messen(IN:= FALSE);
	END_IF


2: (*Übertragung der k-Werte in das Kalibrierungs-Array*)

	Umrechnungsfaktoren[WaagenNummer,Kalibrierungsschritt]:= k_werte[Kalibrierungsschritt];

	state:= 3;

3:	

	BereitNachstePosition:= TRUE;
	Kalibrierungsschritt:= Kalibrierungsschritt + 1; //nächster Kalibrierungsschritt
	
	(*Falls eine Waage alle Kalibrierungsschritte durchlaufen hat wird die nächste Waage 
		kalibriert.*)
	IF Kalibrierungsschritt > 5 THEN 
		WaageKalibriert[WaagenNummer]:=TRUE;
		WaagenNummer := WaagenNummer +1 ;
		Kalibrierungsschritt := 1;
		state:= 0;
	END_IF
	
	(*Alle Waagen sind alle 5 Kalibrierungsschritte durchlaufen. Gewichtskalibrierung ist abgeschlossen
		state wird auf Null gesetzt.*)
	IF Kalibrierungsschritt > 5  AND WaagenNummer > 4 THEN 
			WaagenKalibrierungFertig:= TRUE; 
			state:= 0;
	END_IF

END_CASE]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>