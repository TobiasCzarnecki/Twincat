<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4019.2">
  <POU Name="ConfigWaage" Id="{d4d09f66-48a2-4467-990b-a6bdbad30313}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM ConfigWaage 

VAR
//========================================================================================
	timer_Einschwingen: TON;		//Einschwingzeit wird definiert
	timer_Messen	: TON;		//Messzeit wird definiert
	
	bEinschwingvorgang_vorbei: 	BOOL;
	
	WertMitteln: 	ARRAY[1..4] OF FT_AVG;
	Trigger :		ARRAY[1..4] OF SH_1;
	FilterIn : 		ARRAY[1..4] OF REAL;
	k_werte: 		ARRAY[1..4] OF REAL;
	
	counter: 	INT;		//Laufvariable für For-Schleifen
	state: 		INT := 0; 
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[

CASE state OF

0: (*Einschwingvorgang wird abgewartet*)
	BereitNachstePosition:= FALSE;
	IF ManuellOK THEN 
	timer_Einschwingen(IN:= TRUE, PT:= T#120S ); // der Timer wird gestartet, damit sich das Wägesystem einschwingen kann
	IF timer_Einschwingen.Q  THEN 
		timer_Einschwingen(IN :=FALSE); 
		ManuellOK := FALSE;
		state:=1;
	END_IF
	END_IF
	
1: (*Kalibrierungsdaten werden aufgenommen und über einen FIlter gemittelt*)
	
	timer_Messen(IN:= TRUE, PT:= T#120S); //120 Sekunden wird gemessen
	

	FOR counter:=1 TO 4 DO 
	FilterIn[counter] :=Waage_Offset[counter]/ Kalibriergewicht[1];
	Trigger[counter](in:= FilterIn[counter], PT:= T#1S, out=> , Trig=> );
	END_FOR

	WertMitteln[1](IN:= Trigger[1].out, E:= Trigger[1].Trig, N:= 30, RST:= BereitNachstePosition, AVG=>k_werte[1] );	
	WertMitteln[2](IN:= Trigger[2].out, E:= Trigger[2].Trig, N:= 30, RST:= BereitNachstePosition, AVG=>k_werte[2] );	
	WertMitteln[3](IN:= Trigger[3].out, E:= Trigger[3].Trig, N:= 30, RST:= BereitNachstePosition, AVG=>k_werte[3] );	
	WertMitteln[4](IN:= Trigger[4].out, E:= Trigger[4].Trig, N:= 30, RST:= BereitNachstePosition, AVG=>k_werte[4] );	
	
	IF timer_Messen.Q THEN 
		state :=2;
		timer_Messen(IN:= FALSE);
	END_IF


2: (*Übertragung der k-Werte in das Kalibrierungs-Array*)

	FOR counter:=1 TO 4 DO 
		k_alleDaten[1].k_Kalibrierung[counter,PositionKalibrierGewicht]:= k_werte[counter];
	END_FOR
	
	state:= 3;

3:	
	WaageKalibriert[PositionKalibrierGewicht]:=TRUE;
	BereitNachstePosition:= TRUE;
	IF ManuellOK THEN //NachstePosition THEN 
	state:= 0;

	WaagenKalibrierungFertig:= FALSE;
	PositionKalibrierGewicht:= PositionKalibrierGewicht + 1; 
		IF PositionKalibrierGewicht > 4 THEN 
			PositionKalibrierGewicht:= 1;
			WaagenKalibrierungFertig:= TRUE; 
		//	bWaagenKalibrierung := FALSE;
		END_IF
	END_IF

END_CASE]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>